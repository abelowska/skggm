# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build Python Package

on:
  push:
    tags: "*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        cache: 'pip' # caching pip dependencies
    - name: Install dependencies
      run: |
        pip install -U pip wheel
        pip install --install-option="--no-cython-compile" cython
        pip install -r dev-requirements.txt
        python setup.py develop
    - name: Test package
      run: |
        python -m pytest --showlocals --pyargs
        black --check inverse_covariance
        black --check examples
  build_wheels:
    needs: [test]
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3
      # - name: install deps
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y liblapack-dev libopenblas-dev
      - name: Install dependencies
        run: |
          pip install -U pip wheel
          pip install --install-option="--no-cython-compile" cython
          pip install -r dev-requirements.txt
          python setup.py develop
      - name: Test package
        run: |
          python -m pytest --showlocals --pyargs
          black --check inverse_covariance
          black --check examples
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.12.1

      - name: Build wheels
        run: python -m cibuildwheel --output-dir dist
        # to supply options, put them in 'env', like:
        env:
          CIBW_BEFORE_ALL: 'yum makecache && yum install -y lapack-devel openblas-devel'
          CIBW_BUILD: "*-manylinux_x86_64"
          CIBW_SKIP: "pp* cp36-* cp37-* cp311-* cp310-*"
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.whl
  build_mac:
    needs: [test]
    strategy:
      matrix:
        version: [3.9]
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.version }}
    - name: Build package
      run: |
        pip install build
        python -m build --sdist --wheel --outdir dist/ .
    - uses: actions/upload-artifact@v3
      with:
        path: ./dist
  upload_all:
    needs: [build_wheels, build_mac]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
    - uses: pypa/gh-action-pypi-publish@v1.5.0
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}